{"version":3,"sources":["containers/Autharizaton/Login/LogIn.js"],"names":["LogIn","props","useState","error","setError","login","useContext","AuthContext","history","useHistory","useFormHook","email","value","isValid","password","state","onInputChange","onSubmitHandler","e","a","preventDefault","inputs","fetch","process","REACT_APP_BACKEND","method","body","JSON","stringify","headers","res","json","resData","ok","Error","message","user","id","token","replace","onErrorClose","Fragment","onClose","title","className","element","type","label","validators","VALIDATION_EMAIL","onInput","autocomplete","placeholder","errorText","VALIDATION_MINLENGTH","see","onClick","disabled","to","border"],"mappings":"2RAmGeA,UAvFD,SAAAC,GAAU,IAAD,EACOC,mBAAS,MADhB,mBACZC,EADY,KACLC,EADK,KAEXC,EAAUC,qBAAWC,KAArBF,MACFG,EAAUC,cAHG,EAIcC,YAC7B,CACIC,MAAO,CACHC,MAAO,GACPC,SAAS,GAEbC,SAAU,CACNF,MAAO,GACPC,SAAS,KAGjB,GAXIE,EAJW,EAIXA,MAAOC,EAJI,EAIJA,cAcTC,EAAe,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACpBD,EAAEE,iBACIC,EAAS,CACXV,MAAOI,EAAMM,OAAOV,MAAMC,MAC1BE,SAAUC,EAAMM,OAAOP,SAASF,OAJhB,kBAOEU,MAAM,GAAD,OAAIC,mHAAYC,kBAAhB,eAAgD,CACnEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CACL,eAAgB,sBAXR,cAOVC,EAPU,gBAcMA,EAAIC,OAdV,UAcVC,EAdU,OAeXF,EAAIG,GAfO,uBAgBN,IAAIC,MAAMF,EAAQG,SAhBZ,QAkBhB9B,EAAM2B,EAAQI,KAAKC,GAAIL,EAAQM,OAC/B9B,EAAQ+B,QAAQ,oBAnBA,kDAuBhBnC,EAAS,KAAI+B,SAvBG,0DAAH,sDA2BfK,EAAe,WACjBpC,EAAS,OAGb,OACI,kBAAC,IAAD,KACKD,GAAS,kBAAC,IAAMsC,SAAP,KACN,kBAAC,IAAD,CAAUC,QAASF,IACnB,kBAAC,IAAD,CAAUG,MAAM,gBAAgBR,QAAShC,EAAOuC,QAASF,KAE7D,wBAAII,UAAU,kBAAd,SACA,0BAAMA,UAAU,cACZ,kBAAC,IAAD,CACIP,GAAG,QACHQ,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,WAAY,CAACC,eACbC,QAASlC,EACTmC,aAAa,WACbC,YAAY,aACZC,UAAU,6BACd,kBAAC,IAAD,CACIR,QAAQ,QACRR,GAAG,WACHS,KAAK,WACLC,MAAM,WACNG,QAASlC,EACTgC,WAAY,CAACM,YAAqB,IAClCH,aAAa,mBACbC,YAAY,gBACZG,KAAG,EACHF,UAAU,mCAElB,yBAAKT,UAAU,sBACX,kBAAC,IAAD,CAAQY,QAASvC,EAAiBwC,UAAW1C,EAAMF,SAAnD,SACA,kBAAC,IAAD,CAAQ6C,GAAG,eAAeC,QAAM,GAAhC","file":"static/js/10.d5ab7ab3.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport Input from '../../../shared/UIcomponents/Input/Input';\r\nimport Auth from '../Auth/Auth';\r\nimport './LogIn.css';\r\nimport { useFormHook } from '../../../shared/hooks/form-hooks';\r\nimport Button from '../../../shared/UIcomponents/Buttons/Button';\r\nimport { VALIDATION_EMAIL, VALIDATION_MINLENGTH } from '../../../shared/util/Validation';\r\nimport { AuthContext } from '../../../shared/context/auth-context';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BackDrop from '../../../shared/UIcomponents/Backdrop/BackDrop';\r\nimport ModalEtc from '../../../shared/UIcomponents/Models/Modal_etc/Modal_etc';\r\n\r\nconst LogIn = props => {\r\n    const [error, setError] = useState(null);\r\n    const { login } = useContext(AuthContext);\r\n    const history = useHistory();\r\n    const { state, onInputChange } = useFormHook(\r\n        {\r\n            email: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            password: {\r\n                value: '',\r\n                isValid: false\r\n            }\r\n        },\r\n        false\r\n    );\r\n\r\n    const onSubmitHandler = async (e) => {\r\n        e.preventDefault();\r\n        const inputs = {\r\n            email: state.inputs.email.value,\r\n            password: state.inputs.password.value\r\n        }\r\n        try {\r\n            const res = await fetch(`${process.env.REACT_APP_BACKEND}/user/login`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify(inputs),\r\n                headers: {\r\n                    \"Content-Type\": 'application/json'\r\n                }\r\n            });\r\n            const resData = await res.json();\r\n            if (!res.ok) {\r\n                throw new Error(resData.message);\r\n            }\r\n            login(resData.user.id, resData.token);\r\n            history.replace('/locker/accounts');\r\n\r\n        }\r\n        catch (err) {\r\n            setError(err.message);\r\n        }\r\n    }\r\n\r\n    const onErrorClose = () => {\r\n        setError(null);\r\n    }\r\n\r\n    return (\r\n        <Auth>\r\n            {error && <React.Fragment>\r\n                <BackDrop onClose={onErrorClose} />\r\n                <ModalEtc title=\"Error Occured\" message={error} onClose={onErrorClose} />\r\n            </React.Fragment>}\r\n            <h1 className=\"Auth-Login__pg\">Login</h1>\r\n            <form className=\"Auth-Login\">\r\n                <Input\r\n                    id=\"email\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Email\"\r\n                    validators={[VALIDATION_EMAIL()]}\r\n                    onInput={onInputChange}\r\n                    autocomplete=\"username\"\r\n                    placeholder=\"Your Email\"\r\n                    errorText=\"Please enter valid Email\" />\r\n                <Input\r\n                    element=\"input\"\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    onInput={onInputChange}\r\n                    validators={[VALIDATION_MINLENGTH(8)]}\r\n                    autocomplete=\"current-password\"\r\n                    placeholder=\"Your Password\"\r\n                    see\r\n                    errorText=\"Please enter correct password\" />\r\n            </form>\r\n            <div className=\"Auth-Login__Button\">\r\n                <Button onClick={onSubmitHandler} disabled={!state.isValid}>Login</Button>\r\n                <Button to='/auth/signup' border>Create An Acccount</Button>\r\n            </div>\r\n        </Auth>\r\n    )\r\n}\r\n\r\nexport default LogIn;"],"sourceRoot":""}